const tt={LB:"{",RB:"}",STR:"'",IDENT:"?",SEMI:";",COLON:":",EOF:"end"};class Lexer{token(t,e){return{value:t,type:e}}char(t){return/^[A-Za-z0-9_-]+$/.test(t)}skip(t){return" "==t||"\n"==t||"\t"==t||"\r"==t}err(t,e){this.err=!0,this.et=`${t} on\n word: ${e}`,console.error(this.et)}constructor(t){this.err=!1,this.et="",this.code=t;let e=[];const s=this.code.split(""),i=s.length;for(;s.length>0;)if(this.skip(s[0]))s.shift();else if(";"==s[0])e.push(this.token(s.shift(),tt.SEMI));else if(":"==s[0])e.push(this.token(s.shift(),tt.COLON));else if("{"==s[0])e.push(this.token(s.shift(),tt.LB));else if("}"==s[0])e.push(this.token(s.shift(),tt.RB));else if("/"==s[0])if(s.shift(),"*"==s[0]){for(s.shift();s.length>0&&"*"!==s[0];)s.shift();s.shift(),s.shift()}else this.err("Invalid character",i-s.length,s[0]),s.shift();else if('"'==s[0]){s.shift();let t="";for(;s.length>0&&'"'!==s[0];)"\\"==s[0]&&(s.shift(),s+=s.shift()),t+=s.shift();s.shift(),e.push(this.token(t,tt.STR))}else if(this.char(s[0])){let t="";for(;s.length>0&&this.char(s[0]);)t+=s.shift();e.push(this.token(t,tt.IDENT))}else this.err("Invalid character",i-s.length,s[0]),s.shift();return e.push(this.token("EOF",tt.EOF)),e}}class Parser{eof(){return this.tokens[0].type!=tt.EOF}at(){return this.tokens[0]}eat(){return this.tokens.shift()}expect(t,e){const s=this.tokens[0];if(!s||s.type!=t){if(e)return s;throw this.err=!0,this.et="Expecting: "+t+" BRO",console.error(this.et),"Expecting: "+t+" BRO"}return this.tokens.shift()}constructor(t){this.tokens=t,this.err=!1;let e={type:"BODY",value:[]};for(;this.eof()&&!this.err;){let t=this.parse_parent();e.value.push(t)}return this.err?(console.error(this.et),0):e}parse_utils(){let t={},e=this.expect(tt.IDENT).value;if(this.eat().type==tt.COLON){let s=this.eat().value;t.type="PROP",t.name=e,t.value=s,this.expect(tt.SEMI,!0)}else t=this.parse_child(),t.name=e;return t}parse_child(){let t={type:"EL",utils:[]};for(;this.at().type!=tt.RB&&this.eof();){let e=this.parse_utils();t.utils.push(e)}return this.expect(tt.RB),t}parse_parent(){let t={type:"EL",name:"",utils:[]};for(t.name=this.expect(tt.IDENT).value,this.expect(tt.LB);this.at().type!=tt.RB&&this.eof();){let e=this.parse_utils();t.utils.push(e)}return this.expect(tt.RB),t}}class Eval{eel(t,e){if("EL"!=e.type)return 0;let s=document.createElement(e.name);for(;e.utils.length>0;){if("PROP"==e.utils[0].type)try{e.utils[0].name.startsWith("attr-")?s.setAttribute(e.utils[0].name.replace("attr-",""),e.utils[0].value):s[e.utils[0].name]=e.utils[0].value}catch(t){this.err=!0,this.et=t}else"EL"==e.utils[0].type&&this.eel(s,e.utils[0]);e.utils.shift()}t.appendChild(s)}ebody(t){for(;t.value.length>0;)this.eel(this.main,t.value.shift());return this.main}constructor(t,e){this.ast=t,this.err=!1,this.et="",this.main=e||document.createElement("main"),this.hasParent=!!e,e instanceof HTMLElement||!this.hasParent||(this.err=!0,this.et=JSON.stringify(e)+" is not a valid dom element"),this.hasParent?this.ebody(this.ast):document.body.appendChild(this.ebody(this.ast))}}export class HTSS{err(t,e){let i=document.createElement("dialog");i.open="true",i.setAttribute("style","background-color:black;color:red;translate: 0px -50%;font-family:monospace;top:50%;"),i.innerHTML=`<h1>${e}: </h1><h3>${t}</h3><form method="dialog"><button>OK</button></form>`,document.body.appendChild(i)}constructor(t,e){try{let s=new Lexer(t);if(s.err)return this.err(s.et,"SYNTAX ERROR"),0;let i=new Parser(s);if(i.err)return this.err(i.et,"PARSING ERROR"),0;let r=new Eval(i,e);if(r.err)return this.err(r.et,"RUNTIME ERROR"),0}catch(t){this.err(t,"ERROR")}}}